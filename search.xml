<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java设计模式</title>
      <link href="/2024/02/10/java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>/2024/02/10/java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/01/25/%E8%AE%A1%E7%BD%91/"/>
      <url>/2024/01/25/%E8%AE%A1%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<h1 id="计网"><a href="#计网" class="headerlink" title="计网"></a>计网</h1><h2 id="1-说说计算机网络体系结构"><a href="#1-说说计算机网络体系结构" class="headerlink" title="1.说说计算机网络体系结构"></a>1.说说计算机网络体系结构</h2><p>OSI七层模型，TCP&#x2F;IP5层模型，五层结构</p><p>OSI:</p><p>应用层</p><p>表示层</p><p>会话层应用层应用层</p><p>传输层传输层传输层</p><p>网络层网络层网络层</p><p>数据链路层     数据链路层</p><p>物理层          网络接口层      物理层</p><p>OSI是一个<strong>理论上</strong>的网络通信模型，TCP&#x2F;IP是<strong>实际上</strong>的网络通信模型，五层模型是为了介绍<strong>网络原理折中</strong>的网络通信模型</p><h2 id="2-数据在各层之间是如何传输的"><a href="#2-数据在各层之间是如何传输的" class="headerlink" title="2.数据在各层之间是如何传输的"></a>2.数据在各层之间是如何传输的</h2><p>物理层：比特流从一跳到另一跳的传递</p><p>数据链路层：物理层的数据无差错的传递给数据链路层，负责将帧从一条到另一跳</p><p>功能：成帧，物理寻址，流量控制，差错控制，访问控制</p><p>网络层：负责将各个分组从源地址传递到目的地址</p><p>功能：逻辑寻址，路由选择</p><p>传输层：负责将报文从一个进程到另一个进程的传递</p><p>（分段，组装，连接控制，流量控制，差错控制）</p><p>会话层：负责会话的控制和同步（会话控制，同步，session）</p><p>表示层：翻译加密，压缩数据</p><p>应用层：向用户提供服务</p><p>3.从浏览器输入url到显示主页的过程</p><ol><li><p>查缓存，浏览器有没有缓存这个页面。</p></li><li><p>dns解析：</p></li></ol><p>将域名解析为ip地址：浏览器先在缓存中找有没有域名和ip对应的缓存，如果没有就去dns服务器查找对应域名得ip</p><ol start="3"><li><p>tcp3次握手</p><p>和目标地址建立3次握手，建立连接</p></li><li><p>http传输</p><p>浏览器向服务器发起一个http请求，服务端处理请求，返回http响应。浏览器解析并且渲染页面</p></li><li><p>tcp四次挥手</p><p>断开连接，</p></li></ol><h2 id="3-说说websokect和socket得区别"><a href="#3-说说websokect和socket得区别" class="headerlink" title="3. 说说websokect和socket得区别"></a>3. 说说websokect和socket得区别</h2><p>websokect：持<strong>久化化协议，低延迟，全双工</strong>和<strong>长期运行</strong>的协议</p><p>优点：</p><p>双向实时通信</p><p>降低延迟</p><p>更高效的资源利用</p><p> 限制：</p><p>不提供加密功能</p><p>不支持古老的浏览器</p><p>websocket是建立在http协议上的一个双向的协议，http是单向的协议</p><p>所以websokect是应用层的协议</p><p><strong>socket不是协议，是方便使用tcp和udp抽象出来的一组接口</strong></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202401251623732.png" alt="image-20240125162243157"></p><p>http是断开响应式，websocket则会通过poll轮询来保持连接。说穿了就是http只能客户端请求服务端才能响应。而websocket服务端可以将数据发送给客户端。</p><h2 id="4-说一下你了解的端口及对应的服务"><a href="#4-说一下你了解的端口及对应的服务" class="headerlink" title="4.说一下你了解的端口及对应的服务"></a>4.说一下你了解的端口及对应的服务</h2><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202401251631266.png" alt="image-20240125163111224"></p><h2 id="CDN加速"><a href="#CDN加速" class="headerlink" title="CDN加速"></a>CDN加速</h2><p>cdn（content delivery network）是一种全球网络分发系统，把网站复制到里用户近的服务器上，提高网站的性能和速度。</p><p>CDN静态加速</p><p>使用缓存技术，将不经常修改的内容拷贝到服务器上</p><p>CDN动态加速：不仅使用缓存，还使用动态内容优化技术，加速数据库查询和动态页面的生成，针对的是经常修改的，</p><h2 id="http常用的状态码"><a href="#http常用的状态码" class="headerlink" title="http常用的状态码"></a>http常用的状态码</h2><p>1xx：信息状态码</p><p>2xx：成功状态码</p><p>3xx：重定向状态码</p><p>4xx：客户端错误状态码</p><p>5xx：服务端错误状态码</p><p>101：切换请求协议</p><p>200：请求成功</p><p>301：请求资源永久移动</p><p>302：请求资源临时移动</p><p>400：客户端请求的语法错误</p><p>401：当前请求需要认证</p><p>403：服务端理解请求，但拒绝执行</p><p>500：服务器内部错误</p><h2 id="说说301和302的区别"><a href="#说说301和302的区别" class="headerlink" title="说说301和302的区别"></a>说说301和302的区别</h2><p>301：<strong>永久性移动</strong>，请求的资源已被移动到新位置。服务器返回响应时，会返回<strong>新的资源地址</strong></p><p>302：<strong>临时性移动</strong>，服务器从另外的地址响应资源，但是客户还应该<strong>继续使用这个地址</strong></p><h2 id="http有哪些请求方式"><a href="#http有哪些请求方式" class="headerlink" title="http有哪些请求方式"></a>http有哪些请求方式</h2><p>get     向服务器获取简单的资源请求</p><p>post    向服务器提交数据请求</p><p>put      修改指定资源</p><p>delete    删除url标记的指定资源</p><p>connect   用于代理服务器</p><p>trance   主要用于换回测试</p><p>options  返回所有可用的方法</p><p>head     获取url标记的资源首部</p><p>post，delete，put，get对应我们最熟悉的增删改查</p><h2 id="get和post的区别"><a href="#get和post的区别" class="headerlink" title="get和post的区别"></a>get和post的区别</h2><ol><li><p>从http报文层面来看：<strong>get</strong>是吧请求信息放在<strong>u</strong>rl当作。<strong>post</strong>是把请求信息放在<strong>请求体</strong>当中。这一点使得<strong>get请求携带的数据有限</strong>。因为url本身是有长度限制的。post把数据请求放在报文体当中，对大小没有限制，从形式上看get把数据放在url当中不太安全，post把数据放在请求体当中比较安全</p></li><li><p>从数据层面来看：</p></li></ol><p>get符合幂等性和安全性，post不符合。按照http约定，get用于查看信息，post用来改变服务器上的信息。正因为get只请求查看信息，所以多次请求，所以对服务器产生的影响是相同的</p><ol start="3"><li>其他层面来看，get请求能够被缓存，get请求的url能保存为浏览器的数千，post请求不具备。，缓存时get能够被广泛应用的根本，它能够被缓存也是因为它的幂等性和安全性。除了返回结果没有多余动作。因此绝大部分get请求都被CDN缓存起来了，大大减少了web服务器的负担</li></ol><p>什么幂等性：方法被多次执行的时候所产生的影响和第一次执行产生的影响相同，</p><p>如何解决：使用数据库的唯一约束</p><p>redis提供的setnx</p><p>状态机，乐观锁</p><h2 id="get的长度限制是多少"><a href="#get的长度限制是多少" class="headerlink" title="get的长度限制是多少"></a>get的长度限制是多少</h2><p>http中的get是通过url进行数据传递的，url本身其实没有对数据的长度进行限制，真正限制get长度的是浏览器。比如IE浏览器，对url的限制是2000个字符们大概2kb左右这个给长度限制不是针对数据而言而是整个url</p><h2 id="http-请求的过程和原理"><a href="#http-请求的过程和原理" class="headerlink" title="http 请求的过程和原理"></a>http 请求的过程和原理</h2><p>客户端发起请求： </p><p>建立tcp连接</p><p>发送http请求</p><p>服务器处理请求</p><p>服务器发送响应</p><p>客户端接受响应</p><p>关闭TCP连接</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue-1</title>
      <link href="/2023/09/25/vue-1/"/>
      <url>/2023/09/25/vue-1/</url>
      
        <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>前后端分离项目步骤</title>
      <link href="/2023/09/25/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E6%AD%A5%E9%AA%A4/"/>
      <url>/2023/09/25/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E6%AD%A5%E9%AA%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="前后端项目创建步骤"><a href="#前后端项目创建步骤" class="headerlink" title="前后端项目创建步骤"></a>前后端项目创建步骤</h1><p>如果没有安装vue的需要执行以下步骤</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install  -g @vue/cli</span><br><span class="line">vue -V</span><br><span class="line">如果第二条命令有vue版本出现，则证明安装成功</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后开始创建项目。我们先从前端开始</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vue create vue</span><br></pre></td></tr></table></figure><p>然后进入到选择界面，然后选择 <strong>Manually select features</strong></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309252135463.png" alt="image-20230925213507406"></p><p>选择Babel，Router之后点击确定</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309252142881.png" alt="image-20230925214247853"></p><p>选择 2.x</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309252157255.png" alt="image-20230925215741221"></p><p>然后选择 yes</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309252158338.png" alt="image-20230925215841302"></p><p>选择yes，然后命名</p><p>最后创建成功，然后开始漫长的等待</p><p>最后创建成功，然后</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd vue </span><br><span class="line">npm run serve</span><br></pre></td></tr></table></figure><p>开始运行</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前后端分离项目步骤 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>流水线</title>
      <link href="/2023/09/25/%E6%B5%81%E6%B0%B4%E7%BA%BF/"/>
      <url>/2023/09/25/%E6%B5%81%E6%B0%B4%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="流水线"><a href="#流水线" class="headerlink" title="流水线"></a>流水线</h1><h2 id="静态多发射处理器"><a href="#静态多发射处理器" class="headerlink" title="静态多发射处理器"></a>静态多发射处理器</h2><p>编译器在编译时，进行相关性分析，和静态分支预测，以静态完成指令打包</p><h6 id="如何理解静态："><a href="#如何理解静态：" class="headerlink" title="如何理解静态："></a>如何理解静态：</h6><ul><li>“静态”一词表示指令的并行执行是在编译阶段或指令发射之前就确定好的</li><li>编译时决策：在静态多发射处理器中，指令的并行执行是在编译阶段进行决策的。编译器会对程序进行静态分析，确定哪些指令可以并行执行，并将其组织成指令组（instruction bundle）。这些指令组在运行时被一次性发射到处理器中执行。</li><li>固定的并行度：静态多发射处理器通常有一个固定的并行度，即每个时钟周期内可以同时执行的指令数量。这个并行度在处理器设计时就被确定下来，并且在运行时是不可改变的。例如，一个四发射处理器每个周期可以同时执行四条指令。</li><li>静态调度：静态多发射处理器使用静态调度来确定指令的执行顺序。在编译阶段，编译器会根据数据依赖关系和控制流信息，对指令进行调度和排序，以最大限度地提高指令级并行性。这个静态调度的结果会被写入指令流（instruction stream）中，然后在运行时按照指令流的顺序执行。 总的来说，静态多发射处理器在编译阶段就确定了指令的并行执行方式和顺序，并且在运行时按照这个确定的方案执行指令。这种静态的设计可以在一定程度上简化处理器的控制逻辑，并提高处理器的性能。但同时也带来了一些挑战，如依赖关系的解决和冲突检测等。</li></ul><h6 id="N发射静态流水线特点"><a href="#N发射静态流水线特点" class="headerlink" title="N发射静态流水线特点"></a>N发射静态流水线特点</h6><ul><li><p>潜在性能提高N倍</p></li><li><p>硬件堆料</p></li><li><p>数据和控制相关带来更大的损失</p></li><li><p>需要极为强大+智能的编译器，尽可能采用VLIW编排指令</p></li></ul><h2 id="多发射动态流水线"><a href="#多发射动态流水线" class="headerlink" title="多发射动态流水线"></a>多发射动态流水线</h2><p><strong>实现</strong></p><ul><li><p>动态调度</p><p> <strong>CPU****在运行时重新安排指令的执行顺序，减少流水线</strong></p><p><strong>空转。</strong></p><p><strong>•</strong> <strong>能调度编译时不知道的竞争情况</strong></p><p><strong>•</strong> <strong>符号程序执行的实际情况</strong></p><p><strong>•</strong> <strong>具有更高的效率和准确性</strong></p><p><strong>•</strong> <strong>简化编译器设计</strong></p><p><strong>•</strong> <strong>代码移植性强</strong></p></li><li><p><strong>并行多线程或</strong>“<strong><strong>超线程</strong></strong>”</p></li></ul><h5 id="并行增加CPU数量"><a href="#并行增加CPU数量" class="headerlink" title="并行增加CPU数量"></a>并行增加CPU数量</h5><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251656457.png" alt="image-20230925165602285"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251656898.png" alt="image-20230925165613860"></p><h5 id="如何让流水线更快-–-解决方案"><a href="#如何让流水线更快-–-解决方案" class="headerlink" title="如何让流水线更快 – 解决方案"></a>如何让流水线更快 – 解决方案</h5><p> 动态多发射流水线 – 由硬件动态调度指令顺序发射给不同的流水线</p><ul><li><p>顺序多发射流水线</p><p> 限制：</p><p>​     数据依赖</p><p>​      冲突和检测</p><p>​    </p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251704760.png" alt="image-20230925170452698"></p><p><strong>解决方案：顺序发生，乱序执行，乱序完成</strong></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251708470.png" alt="image-20230925170850425"></p></li></ul><p>​    记分牌控制的四个阶段</p><p>  原：取指 -&gt;译码-&gt;执行-&gt;写回</p><p> now：<a href="https://blog.csdn.net/weixin_40064300/article/details/124443945?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522169564113016800227411306%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=169564113016800227411306&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-124443945-null-null.142%5Ev94%5Einsert_down28v1&utm_term=%E8%AE%B0%E5%88%86%E7%89%8C&spm=1018.2226.3001.4187">讲解</a></p><p><strong>•</strong> <strong>1.Issue—****指令译码，检测</strong>结构相关****</p><p>• 如果当前指令所使用的功能部件空闲，并且没有其他活动的指令</p><p>使用相同的目的寄存器（避免WAW), 记分牌发射该指令到功能部</p><p>件，并更新记分牌内部数据；<strong>如果有结构相关或<strong><strong>WAW</strong></strong>相关，则该</strong></p><p><strong>指令的发射暂停</strong>，并且也不发射后继指令，直到相关解除. </p><p><strong>•</strong> <strong>2. Read operands—****没有</strong>数据相关<strong>时，读操作数</strong></p><p>• 如果先前已发射的正在运行的指令不对当前指令的源操作数寄存</p><p>器进行写操作，或者一个正在工作的功能部件已经完成了对该寄</p><p>存器的写操作，则该操作数有效。操作数有效时，记分牌控制功</p><p>能部件读操作数，准备执行。</p><p>• 记分牌在这一步动态地解决了RAW相关，指令可能会乱序执行</p><p><strong>•</strong> <strong>3.Execution—****取到操作数后执行</strong> <strong>(EX)</strong> </p><p>• 接收到操作数后，功能部件开始执行. 当计算出结果后，它通知</p><p>记分牌，可以结束该条指令的执行. </p><p><strong>•</strong> <strong>4.Write result—finish execution (WB)</strong> </p><p>• 一旦记分牌得到功能部件执行完毕的信息后，记分牌检测WAR</p><p>相关，如果没有WAR相关，就写结果，如果有WAR 相关，则暂停</p><p>该条指令。</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251914498.png" alt="image-20230925191434424"></p><h5 id="exam"><a href="#exam" class="headerlink" title="exam:"></a>exam:</h5><p>指令状态表</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251930639.png" alt="image-20230925193044610"></p><p>功能部件状态表：</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251931161.png" alt="image-20230925193144130"></p><p>结果寄存器状态表：</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251932645.png" alt="image-20230925193216594"></p><p>begin：</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251935781.png" alt="image-20230925193518718"></p><p>首先由两个Load指令，只有一个可以执行功能部件能够执行Load操作，所以智能流入1，然后是，一次执行</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251939922.png" alt="image-20230925193907853"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251943377.png" alt="image-20230925194322307"></p><p>调度算法二：</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251943206.png" alt="image-20230925194350140"></p><h5 id="动态调度方法二：Tomasulo-Algorithm"><a href="#动态调度方法二：Tomasulo-Algorithm" class="headerlink" title="动态调度方法二：Tomasulo Algorithm"></a>动态调度方法二：Tomasulo Algorithm</h5><p>所用到的技术：数据重定向技术</p><h6 id="数据重定向技术：用于解决数据相关性导致的流水线停顿问题。当一个指令需要等待另一个指令的结果时，流水线会出现停顿，导致性能下降。数据重定向技术通过在流水线中插入一些逻辑电路，使得指令在等待其他指令结果时可以继续执行，从而提高流水线的利用率。"><a href="#数据重定向技术：用于解决数据相关性导致的流水线停顿问题。当一个指令需要等待另一个指令的结果时，流水线会出现停顿，导致性能下降。数据重定向技术通过在流水线中插入一些逻辑电路，使得指令在等待其他指令结果时可以继续执行，从而提高流水线的利用率。" class="headerlink" title="数据重定向技术：用于解决数据相关性导致的流水线停顿问题。当一个指令需要等待另一个指令的结果时，流水线会出现停顿，导致性能下降。数据重定向技术通过在流水线中插入一些逻辑电路，使得指令在等待其他指令结果时可以继续执行，从而提高流水线的利用率。"></a>数据重定向技术：用于解决数据相关性导致的流水线停顿问题。当一个指令需要等待另一个指令的结果时，流水线会出现停顿，导致性能下降。数据重定向技术通过在流水线中插入一些逻辑电路，使得指令在等待其他指令结果时可以继续执行，从而提高流水线的利用率。</h6><p>简单说就是简化读写操作：</p><p>比如说 write B A</p><p>​write B C</p><p>​           直接简化为： write C A</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251951341.png" alt="image-20230925195150289"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309251953634.png" alt="image-20230925195350585"></p><p>例子：</p><ul><li></li></ul><ul><li><ul><li>乱序多发射流水线</li></ul></li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 大三课程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据和信号</title>
      <link href="/2023/09/24/%E6%95%B0%E6%8D%AE%E5%92%8C%E4%BF%A1%E5%8F%B7/"/>
      <url>/2023/09/24/%E6%95%B0%E6%8D%AE%E5%92%8C%E4%BF%A1%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="第三章—数据和信号"><a href="#第三章—数据和信号" class="headerlink" title="第三章—数据和信号"></a>第三章—数据和信号</h1><p>数据无法直接传输所以需要编程信号</p><p>信息（message）：文字，音频，视频等</p><p>数据（data）：再传输之前进行编码，编码之后编程数据</p><p>信号（signal）：数据再通信线路上传递需要变成电信号（双脚线，同轴电缆），光信号（光纤），</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242002720.png" alt="image-20230924200241668"></p><p>数据分类</p><ul><li>模拟数据：连续状态的信息</li><li>数字数据：离散状态的数据</li></ul><p>信号</p><ul><li><p>模拟信号：</p><p>优点：其精确的分辨率，与数字信号相比，模拟信号的信息密度更高。处理更简单，可以直接通过模拟电路组件实现。 缺点：易受干扰，很难纠正。</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242006441.png" alt="image-20230924200613409"></p><p>​                        模拟信号数字信号</p></li><li><p>数字信号</p><p>更高的抗干扰能力，更远的传输距离，且失真幅度小。便于加密处理、存储、处理和交换，设备便于集成化、微型，占用信道频带较宽。 缺点：算法复杂。</p></li></ul><p>数据通信中常用周期模拟信号（带宽小），和非周期数字信号。</p><h2 id="周期性的模拟信号"><a href="#周期性的模拟信号" class="headerlink" title="周期性的模拟信号"></a>周期性的模拟信号</h2><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242026709.png" alt="image-20230924202647663"></p><p>概念：</p><ul><li><p>振幅</p></li><li><p>频率</p></li><li><p>相位</p></li><li><p>波长</p></li><li><p>时域和频域</p><p>时域：时域是指信号在时间轴上的变化情况。在时域中，信号的数值随着时间的变化而变化。可以通过绘制信号的波形图来表示时域特性。时域分析主要关注信号在时间上的幅度、相位、频率等变化。</p><p>频域：指信号在频率轴上的变化情况。在频域中，信号的数值随着频率的变化而变化。频域分析可以将信号转换成频谱图，表示信号在不同频率上的强度。频域分析主要关注信号的频率成分、频率特性等。</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242029470.png" alt="image-20230924202913441"></p></li></ul><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242034064.png" alt="image-20230924203435036"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242034984.png" alt="image-20230924203456954"></p><h2 id="复合信号"><a href="#复合信号" class="headerlink" title="复合信号"></a>复合信号</h2><p>单一频率的正弦波在数据通信中没有用处，需要发送复合信号，复合信号由许多简单正弦波组成。 按照傅里叶分析，任何复合信号是由具有不同频率、相位和振幅的简单正弦波组合而成（附录C）。 如果复合信号是周期性的，分解得到的是一系列具有离散频率的信号。 如果复合信号是非周期性的，分解得到的是具有连续频率的正弦波组合。</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242037466.png" alt="image-20230924203714428"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242039641.png" alt="image-20230924203911611"></p><p><u>带宽&#x3D;最高频率-最低频率</u></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242041285.png" alt="image-20230924204135249"></p><p>带宽&#x3D;5000-1000</p><h2 id="数字信号"><a href="#数字信号" class="headerlink" title="数字信号"></a>数字信号</h2><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242042772.png" alt="image-20230924204225742"></p><p>比如</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242042175.png" alt="image-20230924204247149"></p><p>一个电平表示的比特位数</p><h6 id="n-x3D-log2L"><a href="#n-x3D-log2L" class="headerlink" title="n&#x3D;log2L"></a>n&#x3D;log2L</h6><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242048497.png" alt="image-20230924204834468"></p><p>L时电平数量</p><h4 id="比特率：位数-x2F-每秒"><a href="#比特率：位数-x2F-每秒" class="headerlink" title="比特率：位数&#x2F;每秒"></a>比特率：位数&#x2F;每秒</h4><p>假定我们需要每分钟 100页的速率下载文本文档。假设一页平均 24行，每一行 80个字符，每个字符需要 8位表示，则所需的通道比特率是多少？ 解: 根据题意，比特率为：</p><p>​比特率&#x3D;100 * 24 * 80 *8 &#x2F;60 &#x3D;25.6kbps（千比特&#x2F;秒）</p><h4 id="比特长度-x3D-传播长度-比特持续时间"><a href="#比特长度-x3D-传播长度-比特持续时间" class="headerlink" title="比特长度&#x3D;传播长度 * 比特持续时间"></a>比特长度&#x3D;传播长度 * 比特持续时间</h4><p>（一个比特再传输介质上的距离）</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242056927.png" alt="image-20230924205604887"></p><p>结论:<strong>数字信号的带宽时无穷的</strong></p><p>数字信号时一种复合的模拟信号（带宽无穷大的复合模拟信号）</p><h4 id="数字信号传输"><a href="#数字信号传输" class="headerlink" title="数字信号传输"></a>数字信号传输</h4><h5 id="基带传输"><a href="#基带传输" class="headerlink" title="基带传输"></a>基带传输</h5><p>通过通道传输数字信号，不转化为模拟信号，基带传输时一个带宽下限为0的低通通道</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242100728.png" alt="image-20230924210055697"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242101142.png" alt="image-20230924210150107"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242102362.png" alt="image-20230924210216324"></p><p><strong>结论：只有存在无穷大或者非常大带宽的低通通道，保持数字信号形状的数字信号基带传输才是有可能的</strong></p><p><strong>exam</strong>：计算带宽</p><p>比特率为：n</p><p>如果只有0，1</p><p>T&#x3D;2*1&#x2F;n</p><p>f&#x3D;1&#x2F;T&#x3D;n&#x2F;2</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242110215.png" alt="image-20230924211017172"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242111919.png" alt="image-20230924211102893"></p><p><strong>结论：基带传输当中，所需带宽与所需比特率成正比</strong></p><p>exam：</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242120740.png" alt="image-20230924212022711"></p><h4 id="带同通道"><a href="#带同通道" class="headerlink" title="带同通道"></a>带同通道</h4><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242122425.png" alt="image-20230924212241399"></p><p><strong>结论：如果可用通道是带通通道，不能直接发送数字信号到通道；需要在传输前把数字信号转换成模拟信号</strong></p><p>数字信号—&gt;模拟信号</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242123234.png" alt="image-20230924212347199"></p><h4 id="传输减损"><a href="#传输减损" class="headerlink" title="传输减损"></a>传输减损</h4><p>信号通过介质进行传输，但是其传输并非是完美无缺的。不完美的地方导致了信号减损。这意味着信号在介质的开始一端和结束一端是不相同的。发送的信号并非就是接收到的信号。通常会发生三种类型的减损：衰减、失真和噪声。</p><h5 id="衰减：幅度变化"><a href="#衰减：幅度变化" class="headerlink" title="衰减：幅度变化"></a>衰减：幅度变化</h5><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242127502.png" alt="image-20230924212700463"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242127953.png" alt="image-20230924212718915"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242128273.png" alt="image-20230924212855234"></p><h5 id="失真：波形变化"><a href="#失真：波形变化" class="headerlink" title="失真：波形变化"></a>失真：波形变化</h5><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242129268.png" alt="image-20230924212930231"></p><h5 id="噪声："><a href="#噪声：" class="headerlink" title="噪声："></a>噪声：</h5><h5 id=""><a href="#" class="headerlink" title=""></a><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242134719.png" alt="image-20230924213429663"></h5><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242135809.png" alt="image-20230924213522756"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242135784.png" alt="image-20230924213546731"></p><h4 id="数据速率"><a href="#数据速率" class="headerlink" title="数据速率"></a>数据速率</h4><p>数据通信中一个非常重要的问题是：在一个通道中能够以多快的速率发送数据，即每秒钟的比特数。数据速率取决于三种因素：   1. 有效带宽   2. 使用的信号电平数   3. 通道的质量（噪声电平）</p><h5 id="无噪声通道-奈奎斯特比特率"><a href="#无噪声通道-奈奎斯特比特率" class="headerlink" title="无噪声通道: 奈奎斯特比特率"></a>无噪声通道: 奈奎斯特比特率</h5><h3 id="理论上的最大比特率-x3D-2-×-带宽-×-log2-L，-L是电平数"><a href="#理论上的最大比特率-x3D-2-×-带宽-×-log2-L，-L是电平数" class="headerlink" title="理论上的最大比特率 &#x3D; 2 × 带宽 ×  log2 L，  L是电平数"></a>理论上的最大比特率 &#x3D; 2 × 带宽 ×  log2 L，  L是电平数</h3><h5 id="噪声通道-香农容量定理"><a href="#噪声通道-香农容量定理" class="headerlink" title="噪声通道: 香农容量定理"></a>噪声通道: 香农容量定理</h5><h4 id="通道容量-x3D-带宽-×-log2-1-SNR-（SNR-信噪比）"><a href="#通道容量-x3D-带宽-×-log2-1-SNR-（SNR-信噪比）" class="headerlink" title="通道容量 &#x3D; 带宽 × log2(1+SNR)（SNR:信噪比）"></a>通道容量 &#x3D; 带宽 × log2(1+SNR)（SNR:信噪比）</h4><p><strong>香农公式中没有指出信号电平，意味着无论使用多少个电平，都不可能获得比通道容量更高的数据速率，即香农公式定义了噪声通道理论上的最高数据速率。</strong></p><h5 id="衡量网络性能"><a href="#衡量网络性能" class="headerlink" title="衡量网络性能"></a>衡量网络性能</h5><ul><li>带宽：以赫兹 为单位的带宽（物理层），以比特率衡量（网络中通常之这种）</li><li>吞吐量：单位时间成功传输数据的数量，</li></ul><p>​<img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242341279.png" alt="image-20230924234149233"></p><ul><li><p>延迟：</p><ul><li><strong>传播时间:指一个比特从源到目标的时间，取决于电磁信号的传播距离&#x3D;距离&#x2F;传播速度</strong></li><li><strong>传输时间&#x3D;报文长度&#x2F;传输速度</strong></li><li>排队时间</li><li>处理延迟</li></ul><p> 延迟&#x3D;传播延迟+传输延迟+排队时间+处理延迟</p></li></ul><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309242354546.png" alt="image-20230924235443507"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 大三上 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java语法</title>
      <link href="/2023/09/24/java%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/09/24/java%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="java语法"><a href="#java语法" class="headerlink" title="java语法"></a>java语法</h1><p>java语言特点： </p><ul><li><p>平台无关性：JVM</p></li><li><p>面向对象：</p><p>继承，封装，多态</p></li><li><p>支持多线程:</p><p>java的多线程是通过继承Thread类实现的，c++的多线程是通过引入std：：thread实现的</p></li><li><p>解释和编译共存</p></li></ul><h2 id="JVM-JDK-JRE的区别"><a href="#JVM-JDK-JRE的区别" class="headerlink" title="JVM,JDK,JRE的区别"></a>JVM,JDK,JRE的区别</h2><p>JVM：java虚拟机，java程序运行在java虚拟机上，因此可对不同的平台实现java程序，所以java语言能够实现跨平台</p><p>JDK: java development Kit&#x3D;jRE +JVM+开发工具</p><p>jre&#x3D;jvm+核心类库</p><p>跨平台的实现原理：java源代码被编译成字节码，字节码可以被翻译成机器能够识别的机器码。</p><p>所以我们要理解为什么字节码能够被虚拟机所识别:</p><p>以下是一段java代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后java代码被编译为Javac.c代码</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241348919.png" alt="image-20230924134850731"></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>:  ldc           #<span class="number">2</span>                  <span class="comment">// String Hello, World!</span></span><br><span class="line"><span class="number">2</span>:  astore_1</span><br><span class="line"><span class="number">3</span>:  getstatic     #<span class="number">3</span>                  <span class="comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span></span><br><span class="line"><span class="number">6</span>:  aload_1</span><br><span class="line"><span class="number">7</span>:  invokevirtual #<span class="number">4</span>                  <span class="comment">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span></span><br><span class="line"><span class="number">10</span>: <span class="keyword">return</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>字节码我觉得可以理解为汇编代码，就是中间代码。汇编代码也可以在不同的平台上执行。不同的平台安装对应的虚拟机，jvm将字节码翻译为二进制机器码，就可以实现java语言的平台无关性了</p><h2 id="java语言的编译与解释共存"><a href="#java语言的编译与解释共存" class="headerlink" title="java语言的编译与解释共存"></a>java语言的编译与解释共存</h2><p>编译型编程语言：源代码一次性翻译为可执行的机器代码</p><p>解释型编程语言：一行一行的解释成计价器代码</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241400586.png" alt="image-20230924140033530"></p><p>java数据类型</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241407585.png" alt="image-20230924140711529"></p><p>为什么在有的时候使用基本数据类型的时候一定要用它的包装类，而不使用他自己。</p><p>1.因为包装类提供一些方法，比如转化成String类型，Byte类型等，这些方法只有他的包装类型才有，它本书没有，这些方法可以很好的帮助我们去做转化</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241419123.png" alt="image-20230924141900084"></p><p>2.java的一些繁星参数列表只有包装类型。比如list，set，map等</p><p>3.方法参数和返回值：如果一个方法需要进行一些特殊的处理或判断，或者需要返回一个整数，但是又需要保留null值的可能性，就可以使用Integer作为参数和返回值类型。</p><p>java可以自动对这些数据类型进拆箱和装箱</p><h2 id="自动转化类型，强制转化类型"><a href="#自动转化类型，强制转化类型" class="headerlink" title="自动转化类型，强制转化类型"></a>自动转化类型，强制转化类型</h2><p>自动转化，从小到大</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241421151.png" alt="image-20230924142138116"></p><p>强制转化就是反过来</p><h2 id="amp-和-amp-amp-的区别"><a href="#amp-和-amp-amp-的区别" class="headerlink" title="&amp; 和&amp;&amp;的区别"></a>&amp; 和&amp;&amp;的区别</h2><p>&amp;和&amp;&amp;都要求两边是同时为真，但是</p><p>&amp;&amp;：短路与：左边为false时，就不会判断右边了</p><p>&amp;：逻辑与，左边为false时，还要继续判断右边</p><h2 id="break，continue，return的区别"><a href="#break，continue，return的区别" class="headerlink" title="break，continue，return的区别"></a>break，continue，return的区别</h2><p>break：跳出整个循环</p><p>continue： 跳出本次循环，继续执行下一次循环</p><p>return： 程序返回，不再执行下面的代码</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241426441.png" alt="image-20230924142602402"></p><h2 id="java在处理自增增运算的时候和自我赋值操作时"><a href="#java在处理自增增运算的时候和自我赋值操作时" class="headerlink" title="java在处理自增增运算的时候和自我赋值操作时"></a>java在处理自增增运算的时候和自我赋值操作时</h2><p>是先付给一个临时变量，再自增增，自增增之后，再赋值回去，所以它的值不会发生变化</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241427030.png" alt="image-20230924142737997"></p><h2 id="面向对象和面向过程的区别"><a href="#面向对象和面向过程的区别" class="headerlink" title="面向对象和面向过程的区别"></a>面向对象和面向过程的区别</h2><p>面向对象：把问题纷纷凝结成哥哥对象 —&gt;编年体</p><p>面向过程：把问题分解成步骤—&gt;纪传体</p><h2 id="面向对象三大特征"><a href="#面向对象三大特征" class="headerlink" title="面向对象三大特征"></a>面向对象三大特征</h2><ul><li>继承：使用已存在的类，定义新类过程，可以继承原类，继承原类的方法和属性</li><li>封装：指将数据和操作数据的方法封装在一个类中，对外部隐藏具体的实现细节，只暴露必要的接口供其他类使用。封装的目的是为了提高软件的可维护性、可扩展性和安全性</li><li>多态：一个统一的接口来处理不同类型的对象，使得不同的对象可以以一致的方式进行操作和使用。多态性能够增加代码的灵活性、可扩展性和可维护性。比如说向上转型，overwrite，继承关系等</li></ul><h1 id="Java基本语法"><a href="#Java基本语法" class="headerlink" title="Java基本语法"></a>Java基本语法</h1><h2 id="标识符与数据类型"><a href="#标识符与数据类型" class="headerlink" title="标识符与数据类型"></a>标识符与数据类型</h2><h6 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h6><p>java区分大小写，以分隔符”；“结束语句</p><p>java注释类型： &#x2F;&#x2F; &#x2F;* *&#x2F;</p><h6 id="java标识符的定义规则"><a href="#java标识符的定义规则" class="headerlink" title="java标识符的定义规则"></a>java标识符的定义规则</h6><p>标识符以字母，”-“或”$”开始的字符</p><p>数字不能作为标识符的第一个字符</p><p>标识符不能是java关键字</p><p>标识符大小写敏感，且长度没有限定</p><h5 id="访问修饰符-public，private，protected以及不写时的区别"><a href="#访问修饰符-public，private，protected以及不写时的区别" class="headerlink" title="访问修饰符 public，private，protected以及不写时的区别"></a>访问修饰符 public，private，protected以及不写时的区别</h5><table><thead><tr><th>可见性</th><th>private</th><th>default</th><th>protected</th><th>public</th></tr></thead><tbody><tr><td>同一个类</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>同一个包</td><td>×</td><td>√</td><td>√</td><td>√</td></tr><tr><td>子类当中</td><td>×</td><td>×</td><td>√</td><td>√</td></tr><tr><td>全局</td><td>×</td><td>×</td><td>×</td><td>√</td></tr></tbody></table><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>基本形式</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Map</span>&lt;K,V&gt;</span><br></pre></td></tr></table></figure><p>Map 是一个接口，我们不能直接创建对象，可以通过多态的形式创建对象，Map中有两个参数，一个是K表示键，一个是V表示值，且一个键有一个对应值，Map中不能包含重复键，如果有冲附件添加，会以最后一次键为准，而其他键会被覆盖。</p><p>Map分类</p><ul><li>HashMap</li><li>TreeMap</li></ul><h4 id="Map的基本功能"><a href="#Map的基本功能" class="headerlink" title="Map的基本功能"></a>Map的基本功能</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">map.put(key,value); <span class="comment">//添加键值对</span></span><br><span class="line">map.remove(key);<span class="comment">//删除键为key的键值对</span></span><br><span class="line">map.contains(key);<span class="comment">//判读map是否包含键</span></span><br><span class="line">map.contains(value);<span class="comment">//判断map是否包含值</span></span><br><span class="line">map.isEmpty();<span class="comment">//判断map是否为空</span></span><br><span class="line">map.size();<span class="comment">//求map的大小</span></span><br></pre></td></tr></table></figure><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241924347.png" alt="image-20230924192425215"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">value=map.get(key);<span class="comment">//根据键获取值</span></span><br><span class="line">Set=map.keySet();<span class="comment">//获取所有键的集合</span></span><br><span class="line">Collection&lt;K&gt; collection=map.values()<span class="comment">//获取所有的值</span></span><br><span class="line"> Set&lt;Map.Entry&lt;k,V&gt;&gt;  entrySet  =map.entrySet();<span class="comment">//获取键值对对象的所有集合</span></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL--DQL</title>
      <link href="/2023/09/23/SQL-DQL/"/>
      <url>/2023/09/23/SQL-DQL/</url>
      
        <content type="html"><![CDATA[<h2 id="SQL-–DQL"><a href="#SQL-–DQL" class="headerlink" title="SQL –DQL"></a>SQL –DQL</h2><h2 id="DQL介绍"><a href="#DQL介绍" class="headerlink" title="DQL介绍"></a>DQL介绍</h2><p>DQL是查询语句负责查询表中的业务</p><p>通常分为以下几类</p><ul><li><p>基本查询（不带任何条件）</p></li><li><p>条件查询（WHERE）</p></li><li><p>聚合函数（count、max、min、avg、sum）</p></li><li><p>分组查询（group by）</p></li><li><p>排序查询（order by）</p></li><li><p>分页查询（limit）</p><p>查询的语句语法是</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">字段列表</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">表名列表</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">条件列表</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span></span><br><span class="line">分组字段列表</span><br><span class="line"><span class="keyword">having</span></span><br><span class="line">分组后条件列表</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span></span><br><span class="line">排序字段列表</span><br><span class="line">limit</span><br><span class="line">分页参数</span><br><span class="line">```</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code> ## 基础查询</code></pre></li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名 <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure><p>为了实现这个我们创建了两个表：person_info,city。来存储信息</p><p>两张表创建完成之后，插入的信息如下</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231716676.png" alt="image-20230923171647645"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231707350.png" alt="image-20230923170734296"></p><p>我们从表中查询的语句如下</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span>  字段名 <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure><ol><li>查询一张表中的所有字段，所有元组</li></ol><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231719519.png" alt="image-20230923171925480"></p><p>然后就能看见表中的所有信息。</p><ol start="2"><li><p>查询表中的部分字段</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名 <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231722957.png" alt="image-20230923172217925"></p><p>查询过程中设置字段别名</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段<span class="number">1</span> <span class="keyword">as</span> 别名 <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231726744.png" alt="image-20230923172611713"></p><p>查询过程中去除某行的重复记录</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 字段名  <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231729361.png" alt="image-20230923172949331"></p><h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><p>语法</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名 <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件列表 ;</span><br></pre></td></tr></table></figure><p>where当中是查询的条件</p><p>例子：</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231732215.png" alt="image-20230923173217173"></p><p>where当中就是查询的条件</p><p>条件比较运算符：</p><table><thead><tr><th>比较运算符</th><th>功能</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;&#x3D;</td><td>大于等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;&#x3D;</td><td>小于等于</td></tr><tr><td>&#x3D;</td><td>等于</td></tr><tr><td>&lt;&gt; 或者!&#x3D;</td><td>不等于</td></tr><tr><td>betw…and…</td><td>在某个范围</td></tr><tr><td>in</td><td>in之后的列表选一个</td></tr><tr><td>is null</td><td>是空值</td></tr></tbody></table><table><thead><tr><th>逻辑运算符</th><th>功能</th></tr></thead><tbody><tr><td>AND</td><td>或 &amp;&amp; 并且 (多个条件同时成立)</td></tr><tr><td>OR</td><td>或</td></tr><tr><td>NOT</td><td>或 ! 非 , 不是</td></tr></tbody></table><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231737581.png" alt="image-20230923173737544"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231738136.png" alt="image-20230923173815109"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231739115.png" alt="image-20230923173933079"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231740966.png" alt="image-20230923174021930"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231740079.png" alt="image-20230923174032049"></p><h2 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h2><p>模糊查询中</p><p>“%”表示任意长度的字符或者数字</p><p>“-“表示任意一个字符或者数字</p><p>案例：查找表中任意一个名字为两个字符的元组</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231745389.png" alt="image-20230923174557350"></p><h2 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h2><p>介绍：将一列数据作为一个整体，进行纵向计算</p><p>常见函数</p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>count</td><td>统计数量</td></tr><tr><td>max</td><td>最大值</td></tr><tr><td>min</td><td>最小值</td></tr><tr><td>avg</td><td>平均值（average）</td></tr><tr><td>sum</td><td>求和</td></tr></tbody></table><p>案例</p><p>统计元组数量</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231749844.png" alt="image-20230923174953814"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231750192.png" alt="image-20230923175059153"></p><p>案例：统计员工的平均年龄，最大年龄，最小年龄，年龄之和</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231753944.png" alt="image-20230923175302911"></p><h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><p>分组查询是指根据一个或多个列的值将数据分组，并对每个组进行聚合计算的查询操作。分组查询通常与聚合函数（如SUM、AVG、COUNT等）一起使用，以对每个组的数据进行统计或计算。</p><p>案例：按照姓名字符数进行分组</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231759385.png" alt="image-20230923175921352"></p><p>其他案例</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231800867.png" alt="image-20230923180055829"></p><h2 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h2><p>语法</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名<span class="keyword">from</span> 表名 <span class="keyword">order</span> <span class="keyword">by</span> 字段<span class="number">1</span> 排序方式一，字段<span class="number">2</span> 排序方式二</span><br></pre></td></tr></table></figure><p>排序方式分类</p><ul><li>desc 降序</li><li>asc 升序（默认）</li></ul><p>案例：查询所有员工，并且按照年龄降序方式排列</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231804835.png" alt="image-20230923180454791"></p><p>案例： 查询所有员工并且按照升序方式排列</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231805161.png" alt="image-20230923180535118"></p><p>其他案例</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231805443.png" alt="image-20230923180558410"></p><h2 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h2><p>分页操作在业务系统开发时，也是非常常见的一个功能，我们在网站中看到的各种各样的分页条，后台<br>都需要借助于数据库的分页操作。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表名 limit 起始索引, 查询记录数 ;</span><br></pre></td></tr></table></figure><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231824793.png" alt="image-20230923182412754"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL--DDL</title>
      <link href="/2023/09/23/SQL-DDL/"/>
      <url>/2023/09/23/SQL-DDL/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL–DDL"><a href="#SQL–DDL" class="headerlink" title="SQL–DDL"></a>SQL–DDL</h1><div class="markmap-container" style="height:250px">  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;sql-ddl&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;创建&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;数据库创建：create database 数据表名&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[3,6]},&quot;v&quot;:&quot;表格创建： create table person_info(&lt;br&gt;\nid int primary key comment &#39;工号&#39;,&lt;br&gt;\n...}&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;删除&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;删除数据库：drop database xxx;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;删除表格：drop table xxx；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;删除表格中某一行：alter table 表名 drop 字段名;&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;修改&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;修改表名数据库名：rename 原数据库名/原表明 to 新数据库名/新表名&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;修改原数据库中的某一列&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;alter table 表名 add 字段名 类型(长度) [comment 注释] [约束];&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;alter table 表名 change 旧字段名 新字段名 类型(长度) [comment 注释] [约束];&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;alter table 表名 modify 字段名 新数据类型(长度);&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;展示数据库/表格&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;展示数据库结构：show tables&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;展示当前表格结构：desc table 表名&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;展示当前数据库的创建语句： show create table 表名&quot;}]}]}"></svg></div><p>SQL程序语言有四种类型，对数据库的基本操作都属于这四类，它们分别为；数据定义语言(DDL)、数据查询语言（DQL）、数据操纵语言（DML）、数据控制语言（DCL）</p><p>创建表格之前需要先创建数据库，以下是对数据库操作的一些语言</p><h2 id="创建数据库，选择数据库，查看数据库"><a href="#创建数据库，选择数据库，查看数据库" class="headerlink" title="创建数据库，选择数据库，查看数据库"></a>创建数据库，选择数据库，查看数据库</h2><p>创建表格之前需要先选择数据库，然后创建数据库</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases; #展示但所有数据库</span><br><span class="line">create database  person; #创建名叫person的数据库</span><br><span class="line">use person;#使用名叫person的数据库</span><br><span class="line">select database(); #查看当前所用的数据库</span><br></pre></td></tr></table></figure><h2 id="创建表格"><a href="#创建表格" class="headerlink" title="创建表格"></a>创建表格</h2><p>然后再创建数据库，语法如下，每行“,”结尾，然后创建完数据库之后以”；“结尾，数据库都是如此，语言以”，“好结尾</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table person_info( </span><br><span class="line">id int primary key comment &#x27;工号&#x27;,   </span><br><span class="line">name varchar(255) comment &#x27;员工姓名&#x27;,   </span><br><span class="line">age int comment &#x27;员工年龄&#x27;,   </span><br><span class="line">acount varchar(255) comment &#x27;员工账号&#x27; ,</span><br><span class="line">depart varchar(255) comment &#x27;员工部门&#x27;, </span><br><span class="line">position varchar(255) comment  &#x27;员工职位&#x27;</span><br><span class="line">); #创建数据库的信息</span><br></pre></td></tr></table></figure><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/1.png" alt="img"><br><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/2.png" alt="img"></p><p>然后有了表格，可以再创建一个和他有关联的表格 –&gt;<br> 注意自动增加列必须为主键，一个表格可以有多个主键，写多个主键的时候要采用符合主键的写法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table city</span><br><span class="line">(    id int auto_increment ,  </span><br><span class="line">depart varchar(255)  comment &#x27;部门&#x27;,  </span><br><span class="line">city varchar(255) comment &#x27;城市&#x27;,   </span><br><span class="line">primary key (id,depart)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="复合主键和普通主键的区别"><a href="#复合主键和普通主键的区别" class="headerlink" title="复合主键和普通主键的区别"></a><u>复合主键和普通主键的区别</u></h3><p>复合主键和普通主键都能唯一标识一组元组，复合主键查询成本更高</p><h3 id="设置表格与表格之间的外键"><a href="#设置表格与表格之间的外键" class="headerlink" title="设置表格与表格之间的外键"></a>设置表格与表格之间的外键</h3><p>外键的定义：<br>1.外键是某个表中的一列，它包含在另一个表的主键中。<br>2.外键也是索引的一种，是通过一张表中的一列指向另一张表中的主键，来对两张表进行关联。<br>3.一张表可以有一个外键，也可以存在多个外键，与多张表进行关联。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名</span><br><span class="line">ADD CONSTRAINT FK_外键名称 FOREIGN KEY (列名) REFERENCES 另一张表名(另一张表的主键);</span><br><span class="line">alter table person_info add constraint p_d foreign key (depart) references  </span><br><span class="line">city(depart) ;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意添加数据时要先向主表中添加数据，在向从表中添加数据（reference当中必须有关联的数据）<br><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/3.png" alt="img"></p><h2 id="向表格当中添加数据"><a href="#向表格当中添加数据" class="headerlink" title="向表格当中添加数据"></a>向表格当中添加数据</h2><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/4.png" alt="img"></p><p>语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into person_info (id, name, age, acount, depart, position) values (&#x27;1&#x27;,&#x27;张三&#x27;,&#x27;15&#x27;, &#x27;215100&#x27;,&#x27;人力资源&#x27;,&#x27;经理&#x27;);</span><br><span class="line">insert into city(depart, city) values (&#x27;人力资源&#x27;,&#x27;西安&#x27;);</span><br></pre></td></tr></table></figure><h2 id="查询表结构"><a href="#查询表结构" class="headerlink" title="查询表结构"></a>查询表结构</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">desc 表名 查询表明</span><br><span class="line">desc person_info </span><br></pre></td></tr></table></figure><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/5.png" alt="img"></p><h2 id="查询表的创建语句"><a href="#查询表的创建语句" class="headerlink" title="查询表的创建语句"></a>查询表的创建语句</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show create table 表名</span><br><span class="line">show create table page_info</span><br></pre></td></tr></table></figure><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/6.png" alt="img"></p><h2 id="修改表的某一列"><a href="#修改表的某一列" class="headerlink" title="修改表的某一列"></a>修改表的某一列</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">alter table 表名 add  字段名  类型(长度)  [comment 注释]  [约束];</span><br><span class="line"></span><br><span class="line">alter table 表名 change  旧字段名  新字段名  类型(长度)  [comment 注释]  [约束];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">alter table 表名 modify  字段名  新数据类型(长度);</span><br></pre></td></tr></table></figure><p>注意：change 可以修改名字<br>modify 智能修改数据类型<br>这些修改都不能修改主键约束<br><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/7.png" alt="img"></p><p>删除表的某一列</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 drop 字段名;</span><br></pre></td></tr></table></figure><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/8.png" alt="img"></p><h2 id="删除表或者数据库"><a href="#删除表或者数据库" class="headerlink" title="删除表或者数据库"></a>删除表或者数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">drop  table [ if exists ]  表名;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">drop  database [ if exists ]  数据库名;</span><br></pre></td></tr></table></figure><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/9.png" alt="img"></p><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/10.png" alt="img"></p><h2 id="修改数据库或表格的名字"><a href="#修改数据库或表格的名字" class="headerlink" title="修改数据库或表格的名字"></a>修改数据库或表格的名字</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rename 表格名/数据库名 to 新名字</span><br></pre></td></tr></table></figure><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/13.png" alt="img"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA热部署</title>
      <link href="/2023/09/17/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/09/17/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA热部署"><a href="#IDEA热部署" class="headerlink" title="IDEA热部署"></a>IDEA热部署</h1><p>如何使得IDEA新建一个SpringBoot的时候如何一边写代码一边运行<br>（自动化完成重启）<br>解决办法：开发环境热部署<br>安装spring-boot-dev-tools<br><code>https://mvnrepository.com/</code></p><p>1.首先在pom.xml当中加入依赖</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.1.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.然后下载完毕之后，再在apllication当中增加配置<br>如果是yml文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line">    devtools:  </span><br><span class="line">        restart:   </span><br><span class="line">        enabled: true</span><br><span class="line">        additional-paths: src/main/java</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果是propertites文件<br>就是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spring.devtools.restart.enabled=true</span><br><span class="line">spring.devtools.addition-paths=src/main/java</span><br></pre></td></tr></table></figure><p>3.如果是eclipse软件，这样就行了。如果是IDEA软件，还需要<br>打开<br>File-&gt;settings-&gt;Build-&gt;Exceution-&gt;Deployment-&gt;Comple-&gt;勾选BUild project automatically<br>  4.快捷键<br>  ctr+shift+alt+&#x2F;<br> 打开registergouxuan<br> compler.automake.allow+&#x3D;.when.app.running</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分享chatGPT二次开发应用</title>
      <link href="/2023/07/17/%E5%88%86%E4%BA%ABchatGPT%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E5%BA%94%E7%94%A8/"/>
      <url>/2023/07/17/%E5%88%86%E4%BA%ABchatGPT%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="基于chatgpt的二次开发应用"><a href="#基于chatgpt的二次开发应用" class="headerlink" title="基于chatgpt的二次开发应用"></a>基于chatgpt的二次开发应用</h1><h2 id="秘塔写作猫"><a href="#秘塔写作猫" class="headerlink" title="秘塔写作猫"></a><a href="https://xiezuocat.com/">秘塔写作猫</a></h2><p>介绍：给标题直接进行写作，可用于水作业。比如一些水课的大作业。还有语法改错等</p><h2 id="未来百科"><a href="#未来百科" class="headerlink" title="未来百科"></a><a href="https://www.futurepedia.io/">未来百科</a></h2><p>介绍：会介绍一些基于AI二次开发的应用，<br>我觉得还不错，上面的一些工具都还挺有意思的</p><h2 id="一些读论文的工具"><a href="#一些读论文的工具" class="headerlink" title="一些读论文的工具"></a>一些读论文的工具</h2><p><a href="explainpaper.com">解释纸 </a><br><a href="Lateral.io">Lateral.io</a>)<br><a href="https://arxivxplorer.com/">搜索论文的工具</a><br><a href="https://www.chatpdf.com/">chatPDF</a></p><h2 id="更多的工具"><a href="#更多的工具" class="headerlink" title="更多的工具"></a>更多的工具</h2><p><a href="https://github.com/LangLangShanDeNanKe/chatgpt">点击链接1</a><br><a href="https://github.com/yzfly/awesome-chatgpt-zh">点击链接2</a><br>github上面分享的一些关于gpt二次开发的应用</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>today</title>
      <link href="/2023/03/29/today/"/>
      <url>/2023/03/29/today/</url>
      
        <content type="html"><![CDATA[<h1 id="TODAY"><a href="#TODAY" class="headerlink" title="TODAY"></a>TODAY</h1><p>今天也要好好学习<br>不管了，就这样吧。反正是试试。<br><a href="https://github.com/lhx715/lhx715.github.io/blob/master/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230329110638.jpg" title="无"><img src="/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230329110638.jpg" alt="无" title="无"></a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/27/hello-world/"/>
      <url>/2023/03/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
