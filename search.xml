<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java语法</title>
      <link href="/2023/09/24/java%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/09/24/java%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="java语法"><a href="#java语法" class="headerlink" title="java语法"></a>java语法</h1><p>java语言特点：</p><ul><li><p>平台无关性：JVM</p></li><li><p>面向对象：</p><p>继承，封装，多态</p></li><li><p>支持多线程:</p><p>java的多线程是通过继承Thread类实现的，c++的多线程是通过引入std：：thread实现的</p></li><li><p>解释和编译共存</p></li></ul><h2 id="JVM-JDK-JRE的区别"><a href="#JVM-JDK-JRE的区别" class="headerlink" title="JVM,JDK,JRE的区别"></a>JVM,JDK,JRE的区别</h2><p>JVM：java虚拟机，java程序运行在java虚拟机上，因此可对不同的平台实现java程序，所以java语言能够实现跨平台</p><p>JDK: java development Kit&#x3D;jRE +JVM+开发工具</p><p>jre&#x3D;jvm+核心类库</p><p>跨平台的实现原理：java源代码被编译成字节码，字节码可以被翻译成机器能够识别的机器码。</p><p>所以我们要理解为什么字节码能够被虚拟机所识别:</p><p>以下是一段java代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后java代码被编译为Javac.c代码</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241348919.png" alt="image-20230924134850731"></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>:  ldc           #<span class="number">2</span>                  <span class="comment">// String Hello, World!</span></span><br><span class="line"><span class="number">2</span>:  astore_1</span><br><span class="line"><span class="number">3</span>:  getstatic     #<span class="number">3</span>                  <span class="comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span></span><br><span class="line"><span class="number">6</span>:  aload_1</span><br><span class="line"><span class="number">7</span>:  invokevirtual #<span class="number">4</span>                  <span class="comment">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span></span><br><span class="line"><span class="number">10</span>: <span class="keyword">return</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>字节码我觉得可以理解为汇编代码，就是中间代码。汇编代码也可以在不同的平台上执行。不同的平台安装对应的虚拟机，jvm将字节码翻译为二进制机器码，就可以实现java语言的平台无关性了</p><h2 id="java语言的编译与解释共存"><a href="#java语言的编译与解释共存" class="headerlink" title="java语言的编译与解释共存"></a>java语言的编译与解释共存</h2><p>编译型编程语言：源代码一次性翻译为可执行的机器代码</p><p>解释型编程语言：一行一行的解释成计价器代码</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241400586.png" alt="image-20230924140033530"></p><p>java数据类型</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241407585.png" alt="image-20230924140711529"></p><p>为什么在有的时候使用基本数据类型的时候一定要用它的包装类，而不使用他自己。</p><p>1.因为包装类提供一些方法，比如转化成String类型，Byte类型等，这些方法只有他的包装类型才有，它本书没有，这些方法可以很好的帮助我们去做转化</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241419123.png" alt="image-20230924141900084"></p><p>2.java的一些繁星参数列表只有包装类型。比如list，set，map等</p><p>3.方法参数和返回值：如果一个方法需要进行一些特殊的处理或判断，或者需要返回一个整数，但是又需要保留null值的可能性，就可以使用Integer作为参数和返回值类型。</p><p>java可以自动对这些数据类型进拆箱和装箱</p><h2 id="自动转化类型，强制转化类型"><a href="#自动转化类型，强制转化类型" class="headerlink" title="自动转化类型，强制转化类型"></a>自动转化类型，强制转化类型</h2><p>自动转化，从小到大</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241421151.png" alt="image-20230924142138116"></p><p>强制转化就是反过来</p><h2 id="amp-和-amp-amp-的区别"><a href="#amp-和-amp-amp-的区别" class="headerlink" title="&amp; 和&amp;&amp;的区别"></a>&amp; 和&amp;&amp;的区别</h2><p>&amp;和&amp;&amp;都要求两边是同时为真，但是</p><p>&amp;&amp;：短路与：左边为false时，就不会判断右边了</p><p>&amp;：逻辑与，左边为false时，还要继续判断右边</p><h2 id="break，continue，return的区别"><a href="#break，continue，return的区别" class="headerlink" title="break，continue，return的区别"></a>break，continue，return的区别</h2><p>break：跳出整个循环</p><p>continue： 跳出本次循环，继续执行下一次循环</p><p>return： 程序返回，不再执行下面的代码</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241426441.png" alt="image-20230924142602402"></p><h2 id="java在处理自增增运算的时候和自我赋值操作时"><a href="#java在处理自增增运算的时候和自我赋值操作时" class="headerlink" title="java在处理自增增运算的时候和自我赋值操作时"></a>java在处理自增增运算的时候和自我赋值操作时</h2><p>是先付给一个临时变量，再自增增，自增增之后，再赋值回去，所以它的值不会发生变化</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309241427030.png" alt="image-20230924142737997"></p><h2 id="面向对象和面向过程的区别"><a href="#面向对象和面向过程的区别" class="headerlink" title="面向对象和面向过程的区别"></a>面向对象和面向过程的区别</h2><p>面向对象：把问题纷纷凝结成哥哥对象 —&gt;编年体</p><p>面向过程：把问题分解成步骤—&gt;纪传体</p><h2 id="面向对象三大特征"><a href="#面向对象三大特征" class="headerlink" title="面向对象三大特征"></a>面向对象三大特征</h2><ul><li>继承：使用已存在的类，定义新类过程，可以继承原类，继承原类的方法和属性</li><li>封装：指将数据和操作数据的方法封装在一个类中，对外部隐藏具体的实现细节，只暴露必要的接口供其他类使用。封装的目的是为了提高软件的可维护性、可扩展性和安全性</li><li>多态：一个统一的接口来处理不同类型的对象，使得不同的对象可以以一致的方式进行操作和使用。多态性能够增加代码的灵活性、可扩展性和可维护性。比如说向上转型，overwrite，继承关系等</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL--DQL</title>
      <link href="/2023/09/23/SQL-DQL/"/>
      <url>/2023/09/23/SQL-DQL/</url>
      
        <content type="html"><![CDATA[<h2 id="SQL-–DQL"><a href="#SQL-–DQL" class="headerlink" title="SQL –DQL"></a>SQL –DQL</h2><h2 id="DQL介绍"><a href="#DQL介绍" class="headerlink" title="DQL介绍"></a>DQL介绍</h2><p>DQL是查询语句负责查询表中的业务</p><p>通常分为以下几类</p><ul><li><p>基本查询（不带任何条件）</p></li><li><p>条件查询（WHERE）</p></li><li><p>聚合函数（count、max、min、avg、sum）</p></li><li><p>分组查询（group by）</p></li><li><p>排序查询（order by）</p></li><li><p>分页查询（limit）</p><p>查询的语句语法是</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">字段列表</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">表名列表</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">条件列表</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span></span><br><span class="line">分组字段列表</span><br><span class="line"><span class="keyword">having</span></span><br><span class="line">分组后条件列表</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span></span><br><span class="line">排序字段列表</span><br><span class="line">limit</span><br><span class="line">分页参数</span><br><span class="line">```</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code> ## 基础查询</code></pre></li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名 <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure><p>为了实现这个我们创建了两个表：person_info,city。来存储信息</p><p>两张表创建完成之后，插入的信息如下</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231716676.png" alt="image-20230923171647645"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231707350.png" alt="image-20230923170734296"></p><p>我们从表中查询的语句如下</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span>  字段名 <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure><ol><li>查询一张表中的所有字段，所有元组</li></ol><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231719519.png" alt="image-20230923171925480"></p><p>然后就能看见表中的所有信息。</p><ol start="2"><li><p>查询表中的部分字段</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名 <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231722957.png" alt="image-20230923172217925"></p><p>查询过程中设置字段别名</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段<span class="number">1</span> <span class="keyword">as</span> 别名 <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231726744.png" alt="image-20230923172611713"></p><p>查询过程中去除某行的重复记录</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 字段名  <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231729361.png" alt="image-20230923172949331"></p><h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><p>语法</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名 <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件列表 ;</span><br></pre></td></tr></table></figure><p>where当中是查询的条件</p><p>例子：</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231732215.png" alt="image-20230923173217173"></p><p>where当中就是查询的条件</p><p>条件比较运算符：</p><table><thead><tr><th>比较运算符</th><th>功能</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;&#x3D;</td><td>大于等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;&#x3D;</td><td>小于等于</td></tr><tr><td>&#x3D;</td><td>等于</td></tr><tr><td>&lt;&gt; 或者!&#x3D;</td><td>不等于</td></tr><tr><td>betw…and…</td><td>在某个范围</td></tr><tr><td>in</td><td>in之后的列表选一个</td></tr><tr><td>is null</td><td>是空值</td></tr></tbody></table><table><thead><tr><th>逻辑运算符</th><th>功能</th></tr></thead><tbody><tr><td>AND</td><td>或 &amp;&amp; 并且 (多个条件同时成立)</td></tr><tr><td>OR</td><td>或</td></tr><tr><td>NOT</td><td>或 ! 非 , 不是</td></tr></tbody></table><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231737581.png" alt="image-20230923173737544"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231738136.png" alt="image-20230923173815109"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231739115.png" alt="image-20230923173933079"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231740966.png" alt="image-20230923174021930"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231740079.png" alt="image-20230923174032049"></p><h2 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h2><p>模糊查询中</p><p>“%”表示任意长度的字符或者数字</p><p>“-“表示任意一个字符或者数字</p><p>案例：查找表中任意一个名字为两个字符的元组</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231745389.png" alt="image-20230923174557350"></p><h2 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h2><p>介绍：将一列数据作为一个整体，进行纵向计算</p><p>常见函数</p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>count</td><td>统计数量</td></tr><tr><td>max</td><td>最大值</td></tr><tr><td>min</td><td>最小值</td></tr><tr><td>avg</td><td>平均值（average）</td></tr><tr><td>sum</td><td>求和</td></tr></tbody></table><p>案例</p><p>统计元组数量</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231749844.png" alt="image-20230923174953814"></p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231750192.png" alt="image-20230923175059153"></p><p>案例：统计员工的平均年龄，最大年龄，最小年龄，年龄之和</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231753944.png" alt="image-20230923175302911"></p><h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><p>分组查询是指根据一个或多个列的值将数据分组，并对每个组进行聚合计算的查询操作。分组查询通常与聚合函数（如SUM、AVG、COUNT等）一起使用，以对每个组的数据进行统计或计算。</p><p>案例：按照姓名字符数进行分组</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231759385.png" alt="image-20230923175921352"></p><p>其他案例</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231800867.png" alt="image-20230923180055829"></p><h2 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h2><p>语法</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名<span class="keyword">from</span> 表名 <span class="keyword">order</span> <span class="keyword">by</span> 字段<span class="number">1</span> 排序方式一，字段<span class="number">2</span> 排序方式二</span><br></pre></td></tr></table></figure><p>排序方式分类</p><ul><li>desc 降序</li><li>asc 升序（默认）</li></ul><p>案例：查询所有员工，并且按照年龄降序方式排列</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231804835.png" alt="image-20230923180454791"></p><p>案例： 查询所有员工并且按照升序方式排列</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231805161.png" alt="image-20230923180535118"></p><p>其他案例</p><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231805443.png" alt="image-20230923180558410"></p><h2 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h2><p>分页操作在业务系统开发时，也是非常常见的一个功能，我们在网站中看到的各种各样的分页条，后台<br>都需要借助于数据库的分页操作。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表名 limit 起始索引, 查询记录数 ;</span><br></pre></td></tr></table></figure><p><img src="https://content-1321156231.cos.ap-nanjing.myqcloud.com/202309231824793.png" alt="image-20230923182412754"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL--DDL</title>
      <link href="/2023/09/23/SQL-DDL/"/>
      <url>/2023/09/23/SQL-DDL/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL–DDL"><a href="#SQL–DDL" class="headerlink" title="SQL–DDL"></a>SQL–DDL</h1><div class="markmap-container" style="height:250px">  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;sql-ddl&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;创建&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;数据库创建：create database 数据表名&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[3,6]},&quot;v&quot;:&quot;表格创建： create table person_info(&lt;br&gt;\nid int primary key comment &#39;工号&#39;,&lt;br&gt;\n...}&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;删除&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;删除数据库：drop database xxx;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;删除表格：drop table xxx；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;删除表格中某一行：alter table 表名 drop 字段名;&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;修改&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;修改表名数据库名：rename 原数据库名/原表明 to 新数据库名/新表名&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;修改原数据库中的某一列&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;alter table 表名 add 字段名 类型(长度) [comment 注释] [约束];&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;alter table 表名 change 旧字段名 新字段名 类型(长度) [comment 注释] [约束];&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;alter table 表名 modify 字段名 新数据类型(长度);&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;展示数据库/表格&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;展示数据库结构：show tables&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;展示当前表格结构：desc table 表名&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;展示当前数据库的创建语句： show create table 表名&quot;}]}]}"></svg></div><p>SQL程序语言有四种类型，对数据库的基本操作都属于这四类，它们分别为；数据定义语言(DDL)、数据查询语言（DQL）、数据操纵语言（DML）、数据控制语言（DCL）</p><p>创建表格之前需要先创建数据库，以下是对数据库操作的一些语言</p><h2 id="创建数据库，选择数据库，查看数据库"><a href="#创建数据库，选择数据库，查看数据库" class="headerlink" title="创建数据库，选择数据库，查看数据库"></a>创建数据库，选择数据库，查看数据库</h2><p>创建表格之前需要先选择数据库，然后创建数据库</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases; #展示但所有数据库</span><br><span class="line">create database  person; #创建名叫person的数据库</span><br><span class="line">use person;#使用名叫person的数据库</span><br><span class="line">select database(); #查看当前所用的数据库</span><br></pre></td></tr></table></figure><h2 id="创建表格"><a href="#创建表格" class="headerlink" title="创建表格"></a>创建表格</h2><p>然后再创建数据库，语法如下，每行“,”结尾，然后创建完数据库之后以”；“结尾，数据库都是如此，语言以”，“好结尾</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table person_info( </span><br><span class="line">id int primary key comment &#x27;工号&#x27;,   </span><br><span class="line">name varchar(255) comment &#x27;员工姓名&#x27;,   </span><br><span class="line">age int comment &#x27;员工年龄&#x27;,   </span><br><span class="line">acount varchar(255) comment &#x27;员工账号&#x27; ,</span><br><span class="line">depart varchar(255) comment &#x27;员工部门&#x27;, </span><br><span class="line">position varchar(255) comment  &#x27;员工职位&#x27;</span><br><span class="line">); #创建数据库的信息</span><br></pre></td></tr></table></figure><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/1.png" alt="img"><br><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/2.png" alt="img"></p><p>然后有了表格，可以再创建一个和他有关联的表格 –&gt;<br> 注意自动增加列必须为主键，一个表格可以有多个主键，写多个主键的时候要采用符合主键的写法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table city</span><br><span class="line">(    id int auto_increment ,  </span><br><span class="line">depart varchar(255)  comment &#x27;部门&#x27;,  </span><br><span class="line">city varchar(255) comment &#x27;城市&#x27;,   </span><br><span class="line">primary key (id,depart)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="复合主键和普通主键的区别"><a href="#复合主键和普通主键的区别" class="headerlink" title="复合主键和普通主键的区别"></a><u>复合主键和普通主键的区别</u></h3><p>复合主键和普通主键都能唯一标识一组元组，复合主键查询成本更高</p><h3 id="设置表格与表格之间的外键"><a href="#设置表格与表格之间的外键" class="headerlink" title="设置表格与表格之间的外键"></a>设置表格与表格之间的外键</h3><p>外键的定义：<br>1.外键是某个表中的一列，它包含在另一个表的主键中。<br>2.外键也是索引的一种，是通过一张表中的一列指向另一张表中的主键，来对两张表进行关联。<br>3.一张表可以有一个外键，也可以存在多个外键，与多张表进行关联。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名</span><br><span class="line">ADD CONSTRAINT FK_外键名称 FOREIGN KEY (列名) REFERENCES 另一张表名(另一张表的主键);</span><br><span class="line">alter table person_info add constraint p_d foreign key (depart) references  </span><br><span class="line">city(depart) ;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意添加数据时要先向主表中添加数据，在向从表中添加数据（reference当中必须有关联的数据）<br><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/3.png" alt="img"></p><h2 id="向表格当中添加数据"><a href="#向表格当中添加数据" class="headerlink" title="向表格当中添加数据"></a>向表格当中添加数据</h2><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/4.png" alt="img"></p><p>语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into person_info (id, name, age, acount, depart, position) values (&#x27;1&#x27;,&#x27;张三&#x27;,&#x27;15&#x27;, &#x27;215100&#x27;,&#x27;人力资源&#x27;,&#x27;经理&#x27;);</span><br><span class="line">insert into city(depart, city) values (&#x27;人力资源&#x27;,&#x27;西安&#x27;);</span><br></pre></td></tr></table></figure><h2 id="查询表结构"><a href="#查询表结构" class="headerlink" title="查询表结构"></a>查询表结构</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">desc 表名 查询表明</span><br><span class="line">desc person_info </span><br></pre></td></tr></table></figure><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/5.png" alt="img"></p><h2 id="查询表的创建语句"><a href="#查询表的创建语句" class="headerlink" title="查询表的创建语句"></a>查询表的创建语句</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show create table 表名</span><br><span class="line">show create table page_info</span><br></pre></td></tr></table></figure><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/6.png" alt="img"></p><h2 id="修改表的某一列"><a href="#修改表的某一列" class="headerlink" title="修改表的某一列"></a>修改表的某一列</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">alter table 表名 add  字段名  类型(长度)  [comment 注释]  [约束];</span><br><span class="line"></span><br><span class="line">alter table 表名 change  旧字段名  新字段名  类型(长度)  [comment 注释]  [约束];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">alter table 表名 modify  字段名  新数据类型(长度);</span><br></pre></td></tr></table></figure><p>注意：change 可以修改名字<br>modify 智能修改数据类型<br>这些修改都不能修改主键约束<br><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/7.png" alt="img"></p><p>删除表的某一列</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 drop 字段名;</span><br></pre></td></tr></table></figure><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/8.png" alt="img"></p><h2 id="删除表或者数据库"><a href="#删除表或者数据库" class="headerlink" title="删除表或者数据库"></a>删除表或者数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">drop  table [ if exists ]  表名;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">drop  database [ if exists ]  数据库名;</span><br></pre></td></tr></table></figure><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/9.png" alt="img"></p><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/10.png" alt="img"></p><h2 id="修改数据库或表格的名字"><a href="#修改数据库或表格的名字" class="headerlink" title="修改数据库或表格的名字"></a>修改数据库或表格的名字</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rename 表格名/数据库名 to 新名字</span><br></pre></td></tr></table></figure><p><img src="https://img-1321156231.cos.ap-nanjing.myqcloud.com/13.png" alt="img"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA热部署</title>
      <link href="/2023/09/17/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/09/17/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA热部署"><a href="#IDEA热部署" class="headerlink" title="IDEA热部署"></a>IDEA热部署</h1><p>如何使得IDEA新建一个SpringBoot的时候如何一边写代码一边运行<br>（自动化完成重启）<br>解决办法：开发环境热部署<br>安装spring-boot-dev-tools<br><code>https://mvnrepository.com/</code></p><p>1.首先在pom.xml当中加入依赖</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.1.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.然后下载完毕之后，再在apllication当中增加配置<br>如果是yml文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line">    devtools:  </span><br><span class="line">        restart:   </span><br><span class="line">        enabled: true</span><br><span class="line">        additional-paths: src/main/java</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果是propertites文件<br>就是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spring.devtools.restart.enabled=true</span><br><span class="line">spring.devtools.addition-paths=src/main/java</span><br></pre></td></tr></table></figure><p>3.如果是eclipse软件，这样就行了。如果是IDEA软件，还需要<br>打开<br>File-&gt;settings-&gt;Build-&gt;Exceution-&gt;Deployment-&gt;Comple-&gt;勾选BUild project automatically<br>  4.快捷键<br>  ctr+shift+alt+&#x2F;<br> 打开registergouxuan<br> compler.automake.allow+&#x3D;.when.app.running</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分享chatGPT二次开发应用</title>
      <link href="/2023/07/17/%E5%88%86%E4%BA%ABchatGPT%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E5%BA%94%E7%94%A8/"/>
      <url>/2023/07/17/%E5%88%86%E4%BA%ABchatGPT%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="基于chatgpt的二次开发应用"><a href="#基于chatgpt的二次开发应用" class="headerlink" title="基于chatgpt的二次开发应用"></a>基于chatgpt的二次开发应用</h1><h2 id="秘塔写作猫"><a href="#秘塔写作猫" class="headerlink" title="秘塔写作猫"></a><a href="https://xiezuocat.com/">秘塔写作猫</a></h2><p>介绍：给标题直接进行写作，可用于水作业。比如一些水课的大作业。还有语法改错等</p><h2 id="未来百科"><a href="#未来百科" class="headerlink" title="未来百科"></a><a href="https://www.futurepedia.io/">未来百科</a></h2><p>介绍：会介绍一些基于AI二次开发的应用，<br>我觉得还不错，上面的一些工具都还挺有意思的</p><h2 id="一些读论文的工具"><a href="#一些读论文的工具" class="headerlink" title="一些读论文的工具"></a>一些读论文的工具</h2><p><a href="explainpaper.com">解释纸 </a><br><a href="Lateral.io">Lateral.io</a>)<br><a href="https://arxivxplorer.com/">搜索论文的工具</a><br><a href="https://www.chatpdf.com/">chatPDF</a></p><h2 id="更多的工具"><a href="#更多的工具" class="headerlink" title="更多的工具"></a>更多的工具</h2><p><a href="https://github.com/LangLangShanDeNanKe/chatgpt">点击链接1</a><br><a href="https://github.com/yzfly/awesome-chatgpt-zh">点击链接2</a><br>github上面分享的一些关于gpt二次开发的应用</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>today</title>
      <link href="/2023/03/29/today/"/>
      <url>/2023/03/29/today/</url>
      
        <content type="html"><![CDATA[<h1 id="TODAY"><a href="#TODAY" class="headerlink" title="TODAY"></a>TODAY</h1><p>今天也要好好学习<br>不管了，就这样吧。反正是试试。<br><a href="https://github.com/lhx715/lhx715.github.io/blob/master/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230329110638.jpg" title="无"><img src="/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230329110638.jpg" alt="无" title="无"></a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/27/hello-world/"/>
      <url>/2023/03/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
